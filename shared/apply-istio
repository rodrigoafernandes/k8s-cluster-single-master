Kubernetes Dashboard

kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/master/aio/deploy/recommended.yaml
kubectl proxy --address 0.0.0.0 --accept-hosts '.*' &

---------------------------------------------------------------------------------------------
curl -L https://git.io/getLatestIstio | sh -

cd istio-1.2.2

export PATH=$PWD/bin:$PATH

for i in install/kubernetes/helm/istio-init/files/crd*yaml; do kubectl apply -f $i; done

kubectl apply -f install/kubernetes/istio-demo.yaml

kubectl label namespace default istio-injection=enabled

kubectl apply -f samples/bookinfo/platform/kube/bookinfo.yaml
##--------------------------------------------------------------------------------------------
#INSTALL WITH HELM

curl -L https://git.io/getLatestIstio | sh -

cd istio-{VERSION}

export PATH=$PWD/bin:$PATH

for i in install/kubernetes/helm/istio-init/files/crd*yaml; do kubectl apply -f $i; done

cd ..

wget https://get.helm.sh/helm-v2.16.1-linux-amd64.tar.gz
tar -xnzf helm-v2.16.1-linux-amd64.tar.gz
cd linux-amd64
mv helm /usr/local/bin
mv tiller /usr/local/bin

helm init

kubectl create serviceaccount --namespace=kube-system tiller

kubectl create clusterrolebinding tiller-cluster-role --clusterrole=cluster-admin --serviceaccount=kube-system:tiller

kubectl patch deployments.apps -n kube-system tiller-deploy -p '{"spec":{"template":{"spec":{"serviceAccount":"tiller"}}}}'

cd ..

cd istio-1.4.2

kubectl create namespace istio-system

helm template install/kubernetes/helm/istio --name istio --namespace istio-system --values install/kubernetes/helm/istio/values.yaml --set gateways.istio-ingressgateway.type=NodePort --set grafana.enabled=true --set kiali.enabled=true --set tracing.enabled=true --set kiali.dashboard.username=admin --set kiali.dashboard.passphrase=admin --set servicegraph.enabled=true > meu-istio.yaml

kubectl apply -f meu-istio.yaml

kubectl label namespaces default istio-injection=enabled

KIALI_USERNAME=$(read -p 'Kiali Username: ' uval && echo -n $uval | base64)

KIALI_PASSPHRASE=$(read -sp 'Kiali Passphrase: ' pval && echo -n $pval | base64)

cat <<EOF | kubectl apply -f -
apiVersion: v1
kind: Secret
metadata:
  name: kiali
  namespace: istio-system
  labels:
    app: kiali
type: Opaque
data:
  username: $KIALI_USERNAME
  passphrase: $KIALI_PASSPHRASE
EOF

kubectl apply -f samples/sleep/sleep.yaml
